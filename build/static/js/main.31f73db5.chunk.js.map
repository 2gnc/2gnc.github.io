{"version":3,"sources":["components/Layout/Layout.tsx","components/InnerBox/InnerBox.tsx","components/Logo/Logo.tsx","components/Header/Header.tsx","components/Button/Button.tsx","components/Main/Main.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LayoutIllustrationTypes","b","cn","Layout","illustrationType","children","className","illustration","InnerBox","Logo","Header","text","isMain","main","Button","onClick","link","cls","href","isLink","Main","App","TOP","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAKYA,E,gEAAAA,K,UAAAA,E,oBAAAA,E,wBAAAA,E,wCAAAA,E,sBAAAA,E,0BAAAA,E,gBAAAA,E,4BAAAA,E,+BAAAA,M,KAgBZ,IAAMC,EAAIC,aAAG,UAEAC,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,SAArB,OACnC,qBAAKC,UAAWL,EAAE,CAACM,aAAcH,IAAjC,SACKC,KClBHJ,G,MAAIC,aAAG,aAEAM,EAA4B,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAWL,IAAhB,SAAsBI,KCF3EJ,G,MAAIC,aAAG,SAEAO,EAAwB,kBAAM,qBAAKH,UAAWL,OCCrDA,G,MAAIC,aAAG,WAEAQ,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACnC,sBAAKN,UAAWL,EAAE,CAACY,KAAMD,IAAzB,UACI,oBAAIN,UAAWL,EAAE,QAAjB,SACKU,IAEL,qBAAKL,UAAWL,EAAE,cCLpBA,G,MAAIC,aAAG,WAEAY,EAA0B,SAAC,GAAkC,IAAhCH,EAA+B,EAA/BA,KAAMI,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC3D,OAAID,EAEI,mBAAGE,KAAMF,EAAMV,UAAWL,EAAE,CAAEkB,QAAQ,GAAQ,CAACF,IAA/C,SACKN,IAGFI,EAEH,wBAAQA,QAASA,EAAST,UAAWL,EAAE,KAAM,CAACgB,IAA9C,SACKN,IAIF,MCpBTV,G,MAAIC,aAAG,SAIAkB,EAAwB,kBACjC,cAAC,EAAD,UACI,sBAAKd,UAAWL,IAAhB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CACIU,KAAK,4JACLC,QAAM,IAEV,sBAAKN,UAAWL,EAAE,WAAlB,UACI,oBAAIK,UAAWL,EAAE,SAAjB,mDACA,mBAAGK,UAAWL,EAAE,QAAhB,s+CAMA,mBAAGK,UAAWL,EAAE,QAAhB,2LAIA,cAAC,EAAD,CACIU,KAAK,iFAELK,KAAK,QACLC,IAAI,yBC7BlBhB,G,MAAIC,aAAG,QAEAmB,EAAgB,WAC3B,OACE,qBAAKf,UAAWL,IAAhB,SACE,cAAC,EAAD,CAAQG,iBAAkBJ,EAAwBsB,IAAlD,SACE,cAAC,EAAD,SCCOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31f73db5.chunk.js","sourcesContent":["import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './Layout.css';\n\nexport enum LayoutIllustrationTypes {\n    TOP = 'top',\n    LEFT_BIG = 'left-big',\n    LEFT_SMALL = 'left-small',\n    LEFT_SMALL_CENTRED = 'left-small-centred',\n    RIGHT_BIG = 'right-big',\n    RIGHT_SMALL = 'right-small',\n    BOTTOM = 'bottom',\n    TOP_AND_LEFT = 'top-and-left',\n    TOP_AND_RIGHT = 'top-and-right'\n}\n\ninterface Props {\n    illustrationType: LayoutIllustrationTypes;\n}\n\nconst b = cn('Layout');\n\nexport const Layout: React.FC<Props> = ({ illustrationType, children }) => (\n    <div className={b({illustration: illustrationType})}>\n        {children}\n    </div>\n);\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './InnerBox.css';\n\ninterface Props {}\n\nconst b = cn('InnerBox');\n\nexport const InnerBox: React.FC<Props> = ({ children }) => <div className={b()}>{children}</div>;\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './Logo.css';\n\ninterface Props {}\n\nconst b = cn('Logo');\n\nexport const Logo: React.FC<Props> = () => <div className={b()} />;\n","import React  from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './Header.css';\n\ninterface Props {\n    text: string;\n    isMain?: boolean;\n}\n\nconst b = cn('Header');\n\nexport const Header: React.FC<Props> = ({ text, isMain }) => (\n    <div className={b({main: isMain})}>\n        <h1 className={b('Text')}>\n            {text}\n        </h1>\n        <div className={b('Wave')} />\n    </div>\n);\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './Button.css';\n\ninterface Props {\n    text: string; // контент кнопки\n    cls?: string; // кастомный css класс\n    onClick?: (e: React.MouseEvent) => void; // обработчик клика если компонент используется как кнопка\n    link?: string; // урл если компонент должен являться ссылкой\n}\n\nconst b = cn('Button');\n\nexport const Button: React.FC<Props> = ({ text, onClick, link, cls }) => {\n    if (link) {\n        return (\n            <a href={link} className={b({ isLink: true }, [cls])}>\n                {text}\n            </a>\n        )\n    } else if (onClick) {\n        return (\n            <button onClick={onClick} className={b(null, [cls])}>\n                {text}\n            </button>\n        )\n    } else {\n        return null;\n    }\n}\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { InnerBox } from '../InnerBox/InnerBox';\nimport { Logo } from '../Logo/Logo';\nimport { Header } from '../Header/Header';\nimport { Button } from '../Button/Button';\n\nimport './Main.css';\nconst b = cn('Main');\n\ninterface Props {};\n\nexport const Main: React.FC<Props> = () => (\n    <InnerBox>\n        <div className={b()}>\n            <Logo />\n            <Header\n                text=\"сканер для подбора косметики\"\n                isMain\n            />\n            <div className={b('Content')}>\n                <h3 className={b('Hello')}>Привет!</h3>\n                <p className={b('Text')}>\n                    Я Emolly, твой личный косметолог, и я помогу тебе подобрать косметику для ухода за лицом.\n                    Просто сфотографируй средство, которое собираешься купить, и пришли фото мне.\n                    Я проанализирую его состав и скажу, насколько оно тее подходит. \n                    А еще я расскажу, на что тебе обращать внимание при выборе косметики.\n                </p>\n                <p className={b('Text')}>\n                    Но для начала давай познакомимся.\n                </p>\n\n                <Button\n                    text=\"Познакомиться\"\n                    // onClick={() => console.log(123)}\n                    link=\"ya.ru\"\n                    cls=\"customClass\"\n                />\n            </div>\n        </div>\n    </InnerBox>\n);\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { Layout, LayoutIllustrationTypes } from '../Layout/Layout';\nimport { Main } from '../Main/Main';\n\nimport './App.css';\n\nconst b = cn('App');\n\nexport const App: React.FC = () => {\n  return (\n    <div className={b()}>\n      <Layout illustrationType={LayoutIllustrationTypes.TOP}>\n        <Main />\n      </Layout>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}